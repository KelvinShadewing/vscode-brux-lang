<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>Squirrel Syntax: version 0.1</string>
	<key>fileTypes</key>
	<array>
		<string>.nut</string>
	</array>
	<key>foldingStartMarker</key>
	<string>/\*\*|\{\s*$</string>
	<key>foldingStopMarker</key>
	<string>\*\*/|^\s*\}</string>
	<key>keyEquivalent</key>
	<string>^~S</string>
	<key>name</key>
	<string>Squirrel</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.squirrel</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.squirrel</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.extends.squirrel</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.squirrel</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(class)\s+([a-zA-Z_](?:\w|\.)*)(?:\s+(extends)\s+([a-zA-Z_](?:\w|\.)*))?</string>
			<key>name</key>
			<string>meta.class.squirrel</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.squirrel</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(function)\s*([a-zA-Z0-9_]*)\s*\(([a-zA-Z0-9_]*(,\s*[a-zA-Z0-9_]+)*)\)</string>
			<key>name</key>
			<string>other.function</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(constructor)\s*\((.*)\)</string>
			<key>name</key>
			<string>other.constructor</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(::[a-zA-Z0-9_]*)</string>
			<key>name</key>
			<string>other.global</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(if|else|while|do|switch|case|break|for|foreach|return|throw|yield|continue|catch|resume|default)\b</string>
			<key>name</key>
			<string>keyword.control.squirrel</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(local|class|function|enum)\b</string>
			<key>name</key>
			<string>storage.type.squirrel</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(extends|static|const)\b</string>
			<key>name</key>
			<string>storage.modifier.squirrel</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(delete|in|clone|instanceof|typeof)\b</string>
			<key>name</key>
			<string>keyword.operator.squirrel</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\btrue\b</string>
			<key>name</key>
			<string>constant.language.boolean.true.squirrel</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bfalse\b</string>
			<key>name</key>
			<string>constant.language.boolean.false.squirrel</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bnull\b</string>
			<key>name</key>
			<string>constant.language.null.squirrel</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(base|this)\b</string>
			<key>name</key>
			<string>variable.language.squirrel</string>
		</dict>
		<dict>
			<key>match</key>
			<string>!|%|&amp;|\*|\-\-|\-|\+\+|\+|==|=|!=|&lt;=|&gt;=|&lt;=&gt;|&lt;-|&gt;&gt;&gt;|&lt;&lt;|&gt;&gt;|!|&amp;&amp;|\|\||\?\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|%=|\b(in|instanceof|typeof)\b</string>
			<key>name</key>
			<string>keyword.operator.squirrel</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(array|blob|getroottable|date|this|time|math|agent|device|server|imp|hardware|nv|http|mqtt)\b</string>
			<key>name</key>
			<string>variable.language.electricimp</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(assert|bindenv|castf2i|casti2f|swap2|swap4|swapfloat|regexp|regexp2|format|lstrip|rstrip|split|strip)\b</string>
			<key>name</key>
			<string>keyword.language.electricimp</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(RAND_MAX|PI|DIGITAL_IN|DIGITAL_IN_PULLUP|DIGITAL_IN_PULLDOWN|DIGITAL_IN_WAKEUP|DIGITAL_OUT|DIGITAL_OUT_OD|DIGITAL_OUT_OD_PULLUP|ANALOG_IN|ANALOG_OUT|PWM_OUT|PWM_OUT_STEPS|PULSE_COUNTER|PTPG_OUT_ACTIVE_HIGH|PTPG_OUT_ACTIVE_LOW|SPI_257|SPI_189|UART_1289|UART_57|UART_12|I2C_12|I2C_89|SIMPLEX_TX|SIMPLEX_RXCLOCK_IDLE_HIGH|CLOCK_IDLE_LOW|CLOCK_2ND_EDGE|LSB_FIRST|MSB_FIRST|NO_SCLK|NO_TX|NO_RX|NO_CTSRTS|CALLBACK_WITH_FLAGS|PARITY_NONE|PARITY_EVEN|PARITY_ODD|CLOCK_SPEED_10_KHZ|CLOCK_SPEED_50_KHZ|CLOCK_SPEED_100_KHZ|CLOCK_SPEED_400_KHZ|NORMALISE|A_LAW_COMPRESS|A_LAW_DECOMPRESS|AUDIO|SYNC|ENVIRONMENT_CARD|ENVIRONMENT_MODULE|ENVIRONMENT_AGENT|WAKEREASON_POWER_ON|WAKEREASON_TIMER|WAKEREASON_SW_RESET|WAKEREASON_PIN1|WAKEREASON_PIN|WAKEREASON_NEW_SQUIRREL|WAKEREASON_SQUIRREL_ERROR|WAKEREASON_NEW_FIRMWARE|WAKEREASON_SNOOZE|WAKEREASON_HW_RESET|WAKEREASON_BLINKUP|SHUTDOWN_NEWSQUIRREL|SHUTDOWN_NEWFIRMWARE|SHUTDOWN_OTHER|WAIT_TIL_SENT|WAIT_FOR_ACK|SUSPEND_ON_ERROR|RETURN_ON_ERROR|BLINKUP_FAST|BLINKUP_ACTIVEHIGH|SERVER_CONNECTED|NO_WIFI|NO_IP_ADDRESS|NO_SERVER|NOT_RESOLVED|NOT_CONNECTED|SEND_ERROR_NOT_CONNECTED|SEND_ERROR_TIMEOUT|SEND_ERROR_DISCONNECTED|SUNDAY|MONDAY|TUESDAY|WEDNESDAY|THURSDAY|FRIDAY|SATURDAY|WRITE_DONE|READ_READY|NOISE_ERROR|FRAME_ERROR|PARITY_ERROR|OVERRUN_ERROR|LINE_IDLE|WRITE_HALF_DONE|SPIFLASH_POSTVERIFY|SPIFLASH_PREVERIFY|NO_TIMEOUT|VALIDATE_NONE|VALIDATE_USING_SYSTEM_CA_CERTS)\b</string>
			<key>name</key>
			<string>constant.language.electricimp</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\;</string>
			<key>name</key>
			<string>punctuation.terminator.statement.squirrel</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b</string>
			<key>name</key>
			<string>constant.numeric.squirrel</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.squirrel</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.squirrel</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.squirrel</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.squirrel</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.squirrel</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.squirrel</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*\*(?!/)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.squirrel</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.documentation.squirrel</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.squirrel</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.squirrel</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.squirrel</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(//).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.squirrel</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\{|\}</string>
			<key>name</key>
			<string>meta.brace.curly.squirrel</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\(|\)</string>
			<key>name</key>
			<string>meta.brace.round.squirrel</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\[|\]</string>
			<key>name</key>
			<string>meta.brace.square.squirrel</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.nut</string>
	<key>uuid</key>
	<string>C67FB35D-FC5F-409A-AB3E-38E9AFFE1FFD</string>
</dict>
</plist>
